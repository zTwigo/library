/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package user_interface;

import com.formdev.flatlaf.FlatClientProperties;
import components.InputField;
import components.SearchBar;
import database.User;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.miginfocom.swing.MigLayout;
import javax.swing.*;
import javax.xml.parsers.ParserConfigurationException;
import library.Book;
import library.Library;
import manager.FileManager;
import org.xml.sax.SAXException;
import xml.JAXB;

/**
 *
 * @author Ernesto
 */
public class UserInterface extends javax.swing.JPanel {

    /**
     * As the name of the class might suggest it is crucial to have an instance
     * of the user object which handle its data, in order to either display or modified
     * it throughout the course of the program.
     */
    private User user;
    
    private Library library;
    
    private JAXB xml;
    
    /**
     * Creates new form UserInterface
     * @param username
     * @param rememberMe
     * @param frame
     * @throws java.lang.Exception
     */
    public UserInterface(String username, boolean rememberMe) throws Exception {
        initComponents();
        init();
        initializeUserData(username, rememberMe);
    }
    
    private void init(){
        setLayout(new MigLayout("wrap,fillx,insets 5 45 30 45","fill,250:280"));
        
        add(new Header(), "cell 0 0");
        add(new Body(), "cell 0 1");
    }
    
    private void initializeUserData(String username, boolean rememberMe) throws Exception{
        // Initialize first the instance of the xml's class in order to the files in which data is stored
        xml = new JAXB
        (
                FileManager.getAppData().getPath() + "/" 
                + username 
                + (rememberMe == true ? ".rm" : "") 
                + "/user.xml"
        );
        user = new User();
        library = new Library();
        
        // Create a temporary ArrayList of books which will be added to the library object
        ArrayList<Book> books = new ArrayList<>();
        try {
            // Parse the document
            xml.parseDocument();
        } catch (ParserConfigurationException | SAXException | IOException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Get the user's data
        xml.parseSingleElement(user);
                
        xml.parseFile
        (
                FileManager.getAppData().getPath() + "/" 
                + username 
                + (rememberMe == true ? ".rm" : "") 
                + "/books.xml"
        );
        
        xml.parseListOfElements(books);
        
    }
    
    private void displayBooks(){
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
